# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
name: "Ruby on Rails CI"

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: app_development
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
    
    env:
      RAILS_ENV: test
      DATABASE_URL: "postgres://postgres:password@localhost:5432/app_development"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Ruby and gems
        uses: ruby/setup-ruby@78c01b705fd9d5ad960d432d3a0cfa341d50e410 # v1.179.1
        with:
          bundler-cache: true

      - name: Set up database schema
        run: bin/rails db:schema:load
      
      - name: Install Chrome
        run: sudo apt-get install -y google-chrome-stable

      - name: Get Chrome version
        id: chrome_version
        run: |
          CHROME_VERSION=$(google-chrome --version | grep -oP '\d+\.\d+\.\d+')
          echo "CHROME_VERSION=${CHROME_VERSION}" >> $GITHUB_ENV

      - name: Install ChromeDriver
        run: |
          CHROME_VERSION=${{ env.CHROME_VERSION }}
          DRIVER_VERSION=$(curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROME_VERSION%.*})
          wget -N https://chromedriver.storage.googleapis.com/${DRIVER_VERSION}/chromedriver_linux64.zip
          unzip chromedriver_linux64.zip -d /usr/local/bin/
          rm chromedriver_linux64.zip
        env:
          CHROME_VERSION: ${{ steps.chrome_version.outputs.chrome_version }}

      - name: Set ChromeDriver permissions
        run: sudo chmod +x /usr/local/bin/chromedriver
      - name: Run tests
        run: bundle exec rspec

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Ruby and gems
        uses: ruby/setup-ruby@78c01b705fd9d5ad960d432d3a0cfa341d50e410 # v1.179.1
        with:
          bundler-cache: true

      - name: Generate binstubs
        run: bundle binstubs bundler-audit brakeman rubocop

      - name: Security audit dependencies
        run: bundle exec bundle audit --update

      - name: Security audit application code
        run: bundle exec brakeman -q -w2

      - name: Lint Ruby files
        run: bundle exec rubocop --parallel